0. bootujemo u arch live
1. proveravamo imamo li internet:
	ping archlinux.org
1.1 ako nemamo, namestamo Wi-Fi:
	iwctl
	device list
	station _device_ scan
	station _device_ get-networks
	station _device_ connect _SSID_
	quit
2. brisemo disk ako je SSD, npr /dev/nvme0n1:
	blkdiscard /dev/nvme0n1
3. pravimo particije na disku:
	3.1. da izlistamo particije:
		fdisk -l
	3.2. sada biramo disk za instalaciju, na primer /dev/nvme0n1, i otvaramo ga:
		fdisk /dev/nvme0n1
	3.3. sada pravimo partition table:
		o
	3.4. pravimo particije:
		n
		od 0x800 do 0x80800 (256MiB za boot)
		n
		od 0x80800 do 0x80800+0x800*(broj MiB za glavnu particiju)
	3.5. pisemo promene na disk:
		w
4. listamo nove particije:
	fdisk -l

potvrdi da si na EFI:
	find /sys/firmware/efi/efivars -mindepth 1 -print -quit

timedatectl set-ntp true

mkfs.fat -F 32 "PART_1"
mkfs.ext4 "PART_2"
mount -o defaults,noatime "PART_2" /mnt
mkdir /mnt/efi
mount -o defaults,noatime "PART_1" /mnt/efi

pacman -Syy
pacman -S --noconfirm archlinux-keyring
pacstrap /mnt base linux linux-firmware
mkdir /mnt/root/tren
mount -t tmpfs tmpfs -o defaults,size=128M /mnt/root/tren
genfstab -U /mnt >> /mnt/root/tren/fstab_radni
cd /
arch-chroot /mnt /bin/bash

mkdir -p /var/cache/pacman/pkg
rm -rf /var/cache/pacman/pkg/*
mount -t tmpfs tmpfs -o defaults,size=2560M /var/cache/pacman/pkg

passwd
useradd -mg wheel "USERNAME"
passwd "USERNAME"

cd /etc
sed -i 's/^#Color/Color/' pacman.conf
sed -i 's/#en_US.UTF-8/en_US.UTF-8/' locale.gen
locale-gen
echo "LANG=en_US.UTF-8" >> locale.conf
echo arch >> hostname
ln -sf /usr/share/zoneinfo/Europe/Belgrade localtime

pacman -S --noconfirm --needed networkmanager grub nano base-devel efibootmgr amd-ucode
rm -rf /var/cache/pacman/pkg/*

EDIT nanorc:
	set zap
	tabsize 4

EDIT sudoers:
	%sudo
groupadd sudo
gpasswd -a $username sudo

mkdir -p NetworkManager/conf.d
EDIT NetworkManager/conf.d/dns.conf:
	[main]
	dns=none
systemctl enable NetworkManager

cd /root/tren
curl https://raw.githubusercontent.com/donaastor/zivan/refs/heads/main/fstabx > fstabx
sed -i 's/usernm/USERNAME/' fstabx
cat fstabx >> fstab_radni
cp fstab_radni /etc/fstab

cd /home/USERNAME
sudo -u USERNAME mkdir -p tren media docs .cargo .config .cache .local{,/share} .cache/{fontconfig,mesa_shader_cache,pip,thumbnails,babl}
mkdir /var/lib/systemd/coredump
cd /tmp

EDIT /etc/systemd/journald.conf:
	[Journal]
	Storage=volatile
rm -rf /var/log/journal

EDIT /etc/mkinitcpio.conf:
	MODULES=(amdgpu ...)
mkinitcpio -P

grub-install --target=x86_64-efi --efi-directory=/efi --bootloader-id=GRUB
EDIT /etc/default/grub:
	GRUB_TIMEOUT=1
	GRUB_CMDLINE_LINUX_DEFAULT="... mitigations=off amdgpu.ppfeaturemask=0xffffffff amdgpu.dcdebugmask=0x10"
grub-mkconfig -o /boot/grub/grub.cfg

mkdir -p /etc/systemd/system/getty@tty1.service.d
EDIT /etc/systemd/system/getty@tty1.service.d/autologin.conf:
	[Service]
	ExecStart=
	ExecStart=-/sbin/agetty -o '-p -f -- \\u' --noclear --autologin root - $TERM
	Type=simple

EDIT /etc/resolv.conf:
	nameserver 80.67.169.40
	nameserver 80.67.169.12
	nameserver 217.182.198.203
	nameserver 62.210.136.158

exit
reboot

...

chmod 755 cppc ejex
mv cppc ejex /usr/local/bin/
mv poz.jpg /home/USERNAME/media/
mv geany /home/USERNAME/.config/geany-base
ln -s /tmp/geany-conf /home/USERNAME/.config/geany
mv libfm /home/USERNAME/.config/libfm



